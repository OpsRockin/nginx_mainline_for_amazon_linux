---
version: 2
jobs:
  build:
    docker:
      - image: amazonlinux:2018.03-with-sources
    working_directory: /root/rpmbuild
    steps:
      - checkout
      - run: ./ci/build_deps.sh
      - run: rpmbuild -ba SPECS/nginx.spec
      - persist_to_workspace:
          root: .
          paths:
            - ci
            - RPMS
      - store_artifacts:
          path: /root/rpmbuild/RPMS
  build2:
    docker:
      - image: amazonlinux:2-with-sources
    working_directory: /root/rpmbuild
    steps:
      - checkout
      - run: ./ci/build_deps.sh
      - run: rpmbuild -ba SPECS/nginx.spec
      - persist_to_workspace:
          root: .
          paths:
            - ci
            - RPMS
      - store_artifacts:
          path: /root/rpmbuild/RPMS
  test1:
    docker:
      - image: amazonlinux:2018.03-with-sources
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ./ci/build_deps.sh
      - run: rpm -ivh RPMS/x86_64/nginx-*.amzn1.amimoto.x86_64.rpm
      - run: cp -f ./ci/nginx.conf /etc/nginx/nginx.conf
      - run: nginx -t
      - run: echo "NETWORKING=yes" >/etc/sysconfig/network
      - run: service nginx start
      - run: curl -vf 127.0.0.1/hello
  test2:
    docker:
      - image: amazonlinux:2-with-sources
    working_directory: /tmp/workspace
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run: ./ci/build_deps.sh
      - run: rpm -ivh RPMS/x86_64/nginx-*.amzn2.amimoto.x86_64.rpm
      - run: cp -f ./ci/nginx.conf /etc/nginx/nginx.conf
      - run: nginx -t
      - run: echo "NETWORKING=yes" >/etc/sysconfig/network
      - run: service nginx start
      - run: curl -vf 127.0.0.1/hello

workflows:
  version: 2
  build_and_test:
    jobs:
      - build1
      - build2
      - test1:
          requires:
            - build1
      - test2:
          requires:
            - build2
